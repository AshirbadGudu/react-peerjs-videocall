{"version":3,"sources":["../node_modules/peerjs/dist sync","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","YOUR_RANDOM_ID","parseInt","Math","random","MEDIA_STREAM_CONSTRAINTS","video","audio","echoCancellation","noiseSuppression","App","localVideoRef","useRef","remoteVideoRef","inputVideoRef","startVideoCall","a","navigator","mediaDevices","getUserMedia","stream","addLocalVideo","peerRef","current","call","value","on","remoteStream","addRemoteVideo","console","log","useState","peerID","setPeerID","isOnCall","setIsOnCall","receiveCall","answer","srcObject","localStream","useEffect","Peer","className","onClick","txt","clipboard","writeText","ref","autoPlay","type","getTracks","forEach","track","stop","ReactDOM","render","document","getElementById"],"mappings":"wFAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,I,oJCLnBC,EAAc,aAASC,SAAyB,IAAhBC,KAAKC,WACrCC,EAA2B,CAC/BC,OAAO,EACPC,MAAO,CACLC,kBAAkB,EAClBC,kBAAkB,IAsGPC,MAnGf,WACE,IAAMC,EAAgBC,mBAChBC,EAAiBD,mBACjBE,EAAgBF,mBAChBG,EAAc,uCAAG,4BAAAC,EAAA,+EAEEC,UAAUC,aAAaC,aAC1Cd,GAHiB,OAEbe,EAFa,OAKnBC,EAAcD,GACHE,EAAQC,QAAQC,KAAKV,EAAcS,QAAQE,MAAOL,GACxDM,GAAG,UAAU,SAACC,GAAD,OAAkBC,EAAeD,MAPhC,gDASnBE,QAAQC,IAAR,MATmB,yDAAH,qDAJP,EAgBeC,mBAAS,IAhBxB,mBAgBNC,EAhBM,KAgBEC,EAhBF,OAiBmBF,oBAAS,GAjB5B,mBAiBNG,EAjBM,KAiBIC,EAjBJ,KAkBPb,EAAUV,mBAGVwB,EAAW,uCAAG,WAAOZ,GAAP,eAAAR,EAAA,+EAEKC,UAAUC,aAAaC,aAC1Cd,GAHc,OAEVe,EAFU,OAKhBC,EAAcD,GACdI,EAAKa,OAAOjB,GACZI,EAAKE,GAAG,UAAU,SAACC,GAAD,OAAkBC,EAAeD,MAPnC,gDAShBE,QAAQC,IAAR,MATgB,yDAAH,sDAcXF,EAAiB,SAACD,GACtBd,EAAeU,QAAQe,UAAYX,EACnCQ,GAAY,IAIRd,EAAgB,SAACkB,GAAD,OACnB5B,EAAcY,QAAQe,UAAYC,GAyBrC,OAZAC,qBAAU,WAQR,OAPAlB,EAAQC,QAAU,IAAIkB,IAAKxC,GAE3BqB,EAAQC,QAAQG,GAAG,QAAQ,SAAC1B,GAC1BiC,EAAUjC,MAGZsB,EAAQC,QAAQG,GAAG,OAAQU,GACpB,eACN,IAID,sBAAKM,UAAU,MAAf,UACE,mCACE,sDAAyBV,KACzB,wBACEW,QAAS,WANO,IAACC,IAOCZ,EAPOf,UAAU4B,UAAUC,UAAUF,IAKzD,qBAQF,iCACE,uBAAOG,IAAKpC,EAAeqC,UAAQ,IACnC,uBAAOD,IAAKlC,EAAgBmC,UAAQ,OAEtC,mCACE,uBAAOC,KAAK,OAAOF,IAAKjC,IACvBoB,EACC,wBAAQQ,UAAU,MAAMC,QAzCX,WACChC,EAAcY,QAAQe,UAAUY,YACxCC,SAAQ,SAACC,GAAD,OAAWA,EAAMC,UAChB1C,EAAcY,QAAQe,UAAUY,YACxCC,SAAQ,SAACC,GAAD,OAAWA,EAAMC,UACtC1C,EAAcY,QAAQe,UAAY,KAClCzB,EAAeU,QAAQe,UAAY,KACnCH,GAAY,IAkCN,sBAIA,wBAAQO,UAAU,QAAQC,QAAS5B,EAAnC,yBClGVuC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.49d4a031.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 13;","import Peer from \"peerjs\";\nimport { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nconst YOUR_RANDOM_ID = `id-${parseInt(Math.random() * 100)}`;\nconst MEDIA_STREAM_CONSTRAINTS = {\n  video: true,\n  audio: {\n    echoCancellation: true,\n    noiseSuppression: true,\n  },\n};\nfunction App() {\n  const localVideoRef = useRef();\n  const remoteVideoRef = useRef();\n  const inputVideoRef = useRef();\n  const startVideoCall = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia(\n        MEDIA_STREAM_CONSTRAINTS\n      );\n      addLocalVideo(stream);\n      let call = peerRef.current.call(inputVideoRef.current.value, stream);\n      call.on(\"stream\", (remoteStream) => addRemoteVideo(remoteStream));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const [peerID, setPeerID] = useState(\"\");\n  const [isOnCall, setIsOnCall] = useState(false);\n  const peerRef = useRef();\n\n  // Create Receive Function\n  const receiveCall = async (call) => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia(\n        MEDIA_STREAM_CONSTRAINTS\n      );\n      addLocalVideo(stream);\n      call.answer(stream);\n      call.on(\"stream\", (remoteStream) => addRemoteVideo(remoteStream));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Create Remote Stream Video\n  const addRemoteVideo = (remoteStream) => {\n    remoteVideoRef.current.srcObject = remoteStream;\n    setIsOnCall(true);\n  };\n\n  // Create local Stream Video\n  const addLocalVideo = (localStream) =>\n    (localVideoRef.current.srcObject = localStream);\n\n  // Stop Video Call\n  const endVideoCall = () => {\n    const localTracks = localVideoRef.current.srcObject.getTracks();\n    localTracks.forEach((track) => track.stop());\n    const remoteTracks = localVideoRef.current.srcObject.getTracks();\n    remoteTracks.forEach((track) => track.stop());\n    localVideoRef.current.srcObject = null;\n    remoteVideoRef.current.srcObject = null;\n    setIsOnCall(false);\n  };\n\n  useEffect(() => {\n    peerRef.current = new Peer(YOUR_RANDOM_ID);\n    // Listen Peer Open Event\n    peerRef.current.on(\"open\", (id) => {\n      setPeerID(id);\n    });\n    // Listen Peer Call Event\n    peerRef.current.on(\"call\", receiveCall);\n    return () => {};\n  }, []);\n\n  const copyOnClipboard = (txt) => navigator.clipboard.writeText(txt);\n  return (\n    <div className=\"App\">\n      <header>\n        <h2>Your Video Call id: {peerID}</h2>\n        <button\n          onClick={() => {\n            copyOnClipboard(peerID);\n          }}\n        >\n          copy\n        </button>\n      </header>\n      <main>\n        <video ref={localVideoRef} autoPlay></video>\n        <video ref={remoteVideoRef} autoPlay></video>\n      </main>\n      <footer>\n        <input type=\"text\" ref={inputVideoRef} />\n        {isOnCall ? (\n          <button className=\"end\" onClick={endVideoCall}>\n            End Call\n          </button>\n        ) : (\n          <button className=\"start\" onClick={startVideoCall}>\n            Call\n          </button>\n        )}\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}